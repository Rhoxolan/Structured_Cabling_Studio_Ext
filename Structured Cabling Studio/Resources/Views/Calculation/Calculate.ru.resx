<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add cable selection recommendations" xml:space="preserve">
    <value>Добавить рекомендации по подбору кабеля</value>
  </data>
  <data name="Advanced calculation parameters" xml:space="preserve">
    <value>Дополнительные параметры расчёта</value>
  </data>
  <data name="Arbitary ports count per workplace" xml:space="preserve">
    <value>Разрешить произвольное количество портов на 1 рабочее место</value>
  </data>
  <data name="Availability of technological reserve coefficient:" xml:space="preserve">
    <value>Учитывать коэффициент технологического запаса:</value>
  </data>
  <data name="AveragePermanentLink" xml:space="preserve">
    <value>Средняя длина постоянного линка (Permanent Link):</value>
  </data>
  <data name="CableHankMeterage" xml:space="preserve">
    <value>Метраж кабеля в 1-й бухте:</value>
  </data>
  <data name="CableQuantity" xml:space="preserve">
    <value>Необходимое количество кабеля:</value>
  </data>
  <data name="CableSelectionRecommendations" xml:space="preserve">
    <value>Рекомендации по подбору кабеля:</value>
  </data>
  <data name="Calculate" xml:space="preserve">
    <value>Рассчитать</value>
  </data>
  <data name="Calculation page title" xml:space="preserve">
    <value>Расчёт</value>
  </data>
  <data name="Clean output block" xml:space="preserve">
    <value>Очистить блок вывода</value>
  </data>
  <data name="Consider standard fire safety requirements" xml:space="preserve">
    <value>Учитывать стандартные требования к пожарной безопасности</value>
  </data>
  <data name="Hank length" xml:space="preserve">
    <value>Метраж</value>
  </data>
  <data name="HankQuantity" xml:space="preserve">
    <value>Необходимое количество бухт кабеля:</value>
  </data>
  <data name="Insulation Material" xml:space="preserve">
    <value>Рекомендуемый материал изоляции кабеля:</value>
  </data>
  <data name="Insulation Type" xml:space="preserve">
    <value>Рекомендуемый тип изоляции кабеля:</value>
  </data>
  <data name="m" xml:space="preserve">
    <value>м.</value>
  </data>
  <data name="Maximum length of the permanent link:" xml:space="preserve">
    <value>Наибольшая длина постоянного линка (Permanent link):</value>
  </data>
  <data name="MaxPermanentLink" xml:space="preserve">
    <value>Наибольшая длина постоянного линка (Permanent Link):</value>
  </data>
  <data name="Minimum length of the permanent link:" xml:space="preserve">
    <value>Наименьшая длина постоянного линка (Permanent link): </value>
  </data>
  <data name="MinPermanentLink" xml:space="preserve">
    <value>Наименьшая длина постоянного линка (Permanent Link):</value>
  </data>
  <data name="NumberOfPorts" xml:space="preserve">
    <value>Количество портов на 1 рабочее место:</value>
  </data>
  <data name="NumberOfWorkplaces" xml:space="preserve">
    <value>Количество рабочих мест:</value>
  </data>
  <data name="Ports count per 1 workplace:" xml:space="preserve">
    <value>Количество портов на 1 рабочее место:</value>
  </data>
  <data name="RecordTime" xml:space="preserve">
    <value>Дата и время записи конфигурации СКС:</value>
  </data>
  <data name="Restore defaults" xml:space="preserve">
    <value>Восстановить значения по умолчанию</value>
  </data>
  <data name="Save to TXT" xml:space="preserve">
    <value>Сохранить в TXT</value>
  </data>
  <data name="Shielding" xml:space="preserve">
    <value>Рекомендуемый тип экранизации кабеля:</value>
  </data>
  <data name="Standart" xml:space="preserve">
    <value>Рекомендуемая категория кабеля:</value>
  </data>
  <data name="Standart values" xml:space="preserve">
    <value>Стандартные значения</value>
  </data>
  <data name="Strict compliance with the standart" xml:space="preserve">
    <value>Строгое соответствие стандарту ISO/IEC 11801</value>
  </data>
  <data name="Take into account the cable hank meterage" xml:space="preserve">
    <value>Учитывать метраж кабеля в бухте</value>
  </data>
  <data name="Take into account the necessity of cable shielding" xml:space="preserve">
    <value>Учитывать необходимость экранизации кабеля</value>
  </data>
  <data name="The standard values of a cable hank length" xml:space="preserve">
    <value>Стандартные значения метража кабеля в бухте</value>
  </data>
  <data name="TotalCableQuantity" xml:space="preserve">
    <value>Итоговое необходимое количество кабеля:</value>
  </data>
  <data name="Used connection interfaces" xml:space="preserve">
    <value>Используемые интерфейсы подключений</value>
  </data>
  <data name="Will the sections of the cable route run outdoors" xml:space="preserve">
    <value>Будут ли участки кабельной трассы проходить вне помещения</value>
  </data>
  <data name="Workplaces count:" xml:space="preserve">
    <value>Количество рабочих мест:</value>
  </data>
</root>