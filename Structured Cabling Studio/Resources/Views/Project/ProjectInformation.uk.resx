<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Author of project" xml:space="preserve">
    <value>Автор проекту</value>
  </data>
  <data name="E-Mail" xml:space="preserve">
    <value>Електронна пошта</value>
  </data>
  <data name="Eight paragraph &amp; link to the SCS-Calc 2.0 repo" xml:space="preserve">
    <value>Реліз додатку SCS-Calc 2.0 відбувся у лютому 2023-го. За сумісництвом, застосунок став предметом курсової роботи з платформи .NET у Комп'ютерній Академії ШАГ м. Кривий Ріг.&lt;br/&gt;
Більш детально з додатком можна ознайомитись на GitHub</value>
  </data>
  <data name="Fifth paragraph - link to the SCS-Calc 1.1 repo" xml:space="preserve">
    <value>Код застосунку SCS-Calc 1.1 доступний на GitHub</value>
  </data>
  <data name="First paragraph" xml:space="preserve">
    <value>У серпні 2021-го, під час написання курсової роботи з предмету "Структуровані кабельні системи" у Комп'ютерній Академії ШАГ м.Кривий Ріг, з'явилася необхідність у створенні програмного забезпечення для розрахунку необхідного для побудови СКС метражу кабелю. Була написана перша версія застосунку - консольний додаток на мові C++, який отримав назву SCS-Calc.</value>
  </data>
  <data name="First&amp;second image description" xml:space="preserve">
    <value>Перша, консольна версія додатку SCS-Calc</value>
  </data>
  <data name="Fourth paragraph" xml:space="preserve">
    <value>Проект мав розвиток. У серпні 2022-го була почата праця над версією 1.1. Одним з основних напрямків розробки будо створення меню додаткових параметрів, де користувач мав змогу налаштувати параметри розрахунку.&lt;br/&gt;
При роботі над версією 1.1 почалася праця над новою архітектурною концепцією проекту. Для можливості переносу додатку на інші платформи розробки, була начата праця над створенням незалежної від типу додатку кросплатформенної бібліотеки, що містить логіку роботи застосунку. Це зіграло значну роль у наступних версіях проекту, давши змогу переносити логічне ядро застосунку на інші платформи.</value>
  </data>
  <data name="Fourth&amp;fifth image description" xml:space="preserve">
    <value>SCS-Calc 1.1</value>
  </data>
  <data name="History of project" xml:space="preserve">
    <value>Історія проекту</value>
  </data>
  <data name="Img." xml:space="preserve">
    <value>Рис.</value>
  </data>
  <data name="Ninth paragraph - link to the Structured Cabling Studio repo" xml:space="preserve">
    <value>Після релізу SCS-Calc 2.0, в якості концептуального розвитку проекту, з'явилася ідея реалізації веб-застосунку. У березні 2023-го, на платформі .NET 7 ASP.NET Core, була начата робота над веб-проектом Structured Cabling Studio.&lt;br/&gt;
Реліз проекту відбувся у травні 2023-го. Успадкувавши концепцію від десктопних версій проекту, Structured Cabling Studio надає широкий функціонал розрахунку необхідного метражу кабелю для побудови СКС і отримання рекомендацій з підбору кабелю.&lt;br/&gt;
З кодом проекту Structured Cabling Studio можна ознайомитись на GitHub</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Профіль</value>
  </data>
  <data name="Project Information page title" xml:space="preserve">
    <value>Інформація про проект</value>
  </data>
  <data name="Second paragraph" xml:space="preserve">
    <value>Однак вже тоді було розуміння того, що потрібен, в першу чергу, застосунок з графічним інтерфейсом користувача.&lt;br/&gt;
Що і було зроблено в червні 2022-го - на мові C#, на платформі .NET 6 Windows Forms, була написана перша версія застосуноку с графічним інтерфейсом користувача. Застосунок отримав релізний індекс 1.0.</value>
  </data>
  <data name="Seventh paragraph" xml:space="preserve">
    <value>Застосунок SCS-Calc 2.0 став цілковито новим, сучасним і функціональним застосунком. Застосунок був написаний на більш сучасній платформі розробці - .NET 7 WPF. Значною мірою був допрацьований функціонал додатку, була додана можливість отримання рекомендацій з підбору кабелю. Перехід на нову платформу дав можливість реалізувати цілковито новий, революційний дизайн.</value>
  </data>
  <data name="Sixth image description" xml:space="preserve">
    <value>SCS-Calc 2.0</value>
  </data>
  <data name="Sixth paragraph" xml:space="preserve">
    <value>Но версія 1.1 так і не була опублікована - робота над версією 1.1 плавно перейшла в роботу над версією 2.0.</value>
  </data>
  <data name="Third image description" xml:space="preserve">
    <value>Застосунок SCS-Calc - десктопна версія</value>
  </data>
  <data name="Third paragraph - link to the SCS-Calc repo" xml:space="preserve">
    <value>Більш детально ознайомитись з додатком SCS-Calc можна на GitHub</value>
  </data>
</root>